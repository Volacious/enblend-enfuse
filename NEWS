March 4, 2004
    Released enblend-0.9

March 27, 2004
    Released enblend-1.0

    - Replaced erosive thinning algorithm for mask creation with a much faster
      nearest feature transform.

    - Reduced memory requirements. Enblend now swaps most of its data to disk
      as temporary files. Enblend also calculates the region of pixels that
      are involved in each blending step and only does math on those pixels,
      improving speed and memory usage.

    - Added options to limit the number of blending levels used.
      This can reduce memory usage and improve speed, at a loss of quality.

    - Added an option to blend around the -180/+180 degree boundary.
      There is still an open issue as to how to handle the zenith and nadir.

    - Added an option to blend the input images sequentially in the order
      given on the command line. Sometimes the assembler can make poor choices
      and seams will still be visible in the output.

April 3, 2004
    Released enblend-1.1

    - Fixed a bug in reading from temporary files that appeared on machines
      with different versions of GCC.

    - Fixed a boundary condition problem that lead to horizontal or vertical
      seams to appear in the output.

    - Fixed a bug where segments of an input image would appear on the far
      side of a blending zone. This would cause strange wedge-shaped artifacts
      in some output images.

April 26, 2004
    Released enblend-1.2

    - Fixed a bug where 8-bit TIFFS would not be identified properly on
      big-endian machines.

    - A second (better) fix for the boundary condition problem that lead
      to horizontal or vertical seams to appear in the output.

May 18, 2004
    Released enblend-1.3

    - Added a configure test for the endian-ness of the machine. I changed
      the way enblend reads and writes 8-bit color fields in 32-bit pixel
      words to reflect the endian-ness of the machine. This should get
      enblend working on powerpc machines.

      This release adds no new features.

October 17, 2004
    Released enblend-2.0

    - Ported Enblend to the VIGRA Computer Vision Library.

    - Support for signed and unsigned 16-bit, 32-bit, single- and double-
      precision floating point pixel types. 

    - Fixed the banding artifacts that often appeared in skies.

    - Sophisticated memory/disk balancing. You can tell Enblend how much
      memory it is allowed to use, and it will swap to disk after that.

    - Support for huge panoramas. I have tested that Enblend can blend a 
      1.2 gigapixel, 16-bit per channel color image. You should be able to
      go right up to the 4 gigabyte limit of the TIFF format.

    - Optional blending in CIE L*a*b* color space.

    - Option to use LZW compression for the output image, if your libtiff
      supports it. This option is selected by default in the prebuilt
      Windows executable.

    - The -s option for sequential blending is now the default. 
      Enblend cannot accurately determine how many blending levels to use
      when there are multiple disjoint overlap regions in one blending
      iteration. It is better to manually tell Enblend the order in which
      the images should be blended. If you still want Enblend to assemble
      non-overlapping images first, use the -a flag.

    - The -l option now tells Enblend the exact number of blending levels
      that you want to use. The geometry of your images may force Enblend to
      use a smaller number of levels. In this case a message will be printed.

    - Gimp (ver. < 2) and Cinepaint exhibit unusual behaviors when loading
      images with unassociated alpha channels. Use the -g flag to work
      around this. With this flag Enblend will create the output image with
      the associated alpha tag set, even though the image is really
      unassociated alpha.

FIXME: date
    Released enblend-2.1

    - Compression is no longer the default option in the Windows executable.

    - Turned off TIFF library warning messages that required user interaction
      on Windows.

    - Fixed a bug in Vigra that caused primary color spots to appear in
      overexposed areas of the image.

    - Fixed a problem with Enblend crashing on large panoramas.
      Modified tiff import to use a scanline-based interface instead of a
      strip-based interface. PTStitcher generates TIFFs with the rows/strip
      tag set to an unreasonable value.
      
    - Ported the source to compile natively on Win32 using MSVC
