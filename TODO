X Merge new vigra
X .cvsignore files
X integer math dithering
X skipsm reduce replacement
    X vector
    X extrapolation
    X wraparound boundary conditions
    X no alpha
    X comment
X skipsm expand replacement
    X vector
    X normal boundary condition
    X wraparound boundary condition
    X comment
X fast cfi row iterators
    left-middle test before changes: 59.54
    left-middle test after changes: 50.50 
    2.5 non-profiling test: 12.9 user
    3.0 non-profiling test: 7.24 user
X make checkpointing optional
    X exportImageAlpha needs accessor to convert AlphaType to ImageComponentType
      lmr test with checkpointing: 104.77
      lmr test with no checkpointing: 99.15
X vigra sized_int
X defines for choosing CachedFileImages vs. BasicImages.
X add GimpAssociatedAlphaHack to new vigra_impex
X EnblendNumericTraits
X icc blending
    X make sure all input images have same icc profile
    X do convert in image->pyramid pixel convert functors
    X exp2 or shift and multiply?
        exp2: 18.26 convert vector to JCH
        shift: 18.60 convert
    X progress indicators for color transforms
- new seam alg
    X libxmi polygon fill
    X cfi strided iterators
        lmr before changes: 99.15
        lmr after changes: 97.58
    X stride 8 mask generation
    X stride 8 mask polygonization
    X polygon mask fill
    X dijkstra polygon vertex interpolation - at half resolution
    X polygon vertex annealing
        X Replace LineIterator with Bresenham's algorithm
              With original vigra LineIterator: 3.02 operator++
                                                1.23 costImageCost
              With new lineEnd compare:         2.65 operator++
                                                2.16 iterate
                                                1.17 costImageCost
              With bresenham LineIterator:      0.93 operator++
                                                1.97 iterate
                                                1.10 costImageCost
        - Additional optimizations:     start   4.48 iterate
              code cleanup                      4.63 iterate
              tau=.75                           3.60 iterate
              magnitude / 4.0                   3.76 iterate
              magnitude / 2.0                   3.69 iterate
    - make it work with wraparound
    - code cleanup and comments
    - Progress indicators for advanced mask generation
    - options to control adv mask gen quality
    - output of quality improvement
    - option to revert to old mask algorithm
- make striding argument object factories for BasicImages
- add NDEBUG to Makefile.am
- misc optimizations
    vigra_precondition in BasicImage, CachedFileImage 7.16
    change to NDEBUG, vigra_assert                    7.21
    costImageCost changes:                             .77 costImageCost -> .61
- replace EnblendROI with vigra::Rect2D
- vigra impex improvements
- cfi swap policy improvements
- cache blackLP copyToPyramid/copyFromPyramid?
- multilayer images
- load/save mask from file
- vogl's hdr test cases
- enable all pixel types
- fix memory estimation messages
- update version number
- documentation update





- Nadir and Zenith in 360x360 panos.

- Allow users to provide their own blending masks. Have an option to write out
  the mask that enblend calculates to a TIFF file.

- Support multilayer TIFFs.

- Stitching discrepancy avoidance in mask creation.

- Make assemble smarter.

- For win32, recompile libtiff with TIF_PLATFORM_CONSOLE
- remove tiff warning handler = null
- add errno checks around libtiff calls in vigra_impex
